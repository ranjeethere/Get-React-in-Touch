// export default function MyApp() {
  const [count, setCount] = useState(0);

  function handleClick() {
    setCount(count + 1);
  }

  return (
    <div>
      <h1>Counters that update separately</h1>
      <MyButton />
      <MyButton />
    </div>
  );
}

function MyButton() {
  // ... we're moving code from here ...
}

//Then, pass the state down from MyApp to each MyButton, together with the shared click handler. 
//You can pass information to MyButton using the JSX curly braces, just like you previously did with built-in tags like <img> :

export default function MyApp() {
  const [count, setCount] = useState(0);

  function handleClick() {
    setCount(count + 1);
  }

  return (
    <div>
      <h1>Counters that update together</h1>
      <MyButton count={count} onClick={handleClick} />
      <MyButton count={count} onClick={handleClick} />
    </div>
  );
}


// The information you pass down like this is called props. 
//Now the MyApp component contains the count state and the handleClick event handler, 
//and passes both of them down as props to each of the buttons.

//Finally, change MyButton to read the props you have passed from its parent component:-


function MyButton({ count, onClick }) {
  return (
    <button onClick={onClick}>
      Clicked {count} times
    </button>
  );
}


