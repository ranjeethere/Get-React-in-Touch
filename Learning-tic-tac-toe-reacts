//here the the tic tac toe game is been divided into differnet types--
// The Files section with a list of files like App.js, index.js, styles.css and a folder called public
//The code editor where you’ll see the source code of your selected file
//The browser section where you’ll see how the code you’ve written will be displayed
// The App.js file should be selected in the Files section. The contents of that file in the code editor should be

export default function Square() {
  return <button className="square">X</button>;
}

//  The code in App.js creates a component.
//In React, a component is a piece of reusable code that represents a part of a user interface. 
//Components are used to render, manage, and update the UI elements in your application. 
//Let’s look at the component line by line to see what’s going on:

export default function Square() {
  return <button className="square">X</button>;
}

export default function Square() {
  return <button className="square">X</button>;
}

//Building the board

//Currently the board is only a single square, but you need nine! If you just try and copy paste your square to make two squares like this:

export default function Square() {
  return <button className="square">X</button><button className="square">X</button>;
}

//You’ll get this error:

Console
/src/App.js: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX Fragment <>...</>?


// React components need to return a single JSX element and not multiple adjacent JSX elements like two buttons. 
//To fix this you can use Fragments (<> and </>) to wrap multiple adjacent JSX elements like this:

export default function Square() {
  return (
    <>
      <button className="square">X</button>
      <button className="square">X</button>
    </>
  );
}


// In the App.js file, update the Square component to look like this:



export default function Square() {
  return (
    <>
      <div className="board-row">
        <button className="square">1</button>
        <button className="square">2</button>
        <button className="square">3</button>
      </div>
      <div className="board-row">
        <button className="square">4</button>
        <button className="square">5</button>
        <button className="square">6</button>
      </div>
      <div className="board-row">
        <button className="square">7</button>
        <button className="square">8</button>
        <button className="square">9</button>
      </div>
    </>
  );
}



//But you now have a problem. Your component named Square, really isn’t a square anymore. 
//Let’s fix that by changing the name to Board:

export default function Board() {
  //...
}

// at this point the may look like this

export default function Board() {
  return (
    <>
      <div className="board-row">
        <button className="square">1</button>
        <button className="square">2</button>
        <button className="square">3</button>
      </div>
      <div className="board-row">
        <button className="square">4</button>
        <button className="square">5</button>
        <button className="square">6</button>
      </div>
      <div className="board-row">
        <button className="square">7</button>
        <button className="square">8</button>
        <button className="square">9</button>
      </div>
    </>
  );
}


// passing data through the proms


// First, you are going to copy the line defining your first square (<button className="square">1</button>) from your Board component into a new Square component:

function Square() {
  return <button className="square">1</button>;
}

export default function Board() {
  // ...
}

Then you’ll update the Board component to render that Square component using JSX syntax:

// ...
export default function Board() {
  return (
    <>
      <div className="board-row">
        <Square />
        <Square />
        <Square />
      </div>
      <div className="board-row">
        <Square />
        <Square />
        <Square />
      </div>
      <div className="board-row">
        <Square />
        <Square />
        <Square />
      </div>
    </>
  );
}
